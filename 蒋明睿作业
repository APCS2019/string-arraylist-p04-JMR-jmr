 Write the StringCoder method decodeString. This method retrieves the substrings in the master stringrepresentedbyeachoftheStringPartobjectsinparts, concatenatesthemintheorderin which they appear in parts, and returns the result.
Complete method decodeString below.
/** @param parts an ArrayList of string parts that are valid in the master string * Precondition: parts.size() > 0
* @return the string obtained by concatenating the parts of the master string
*/
public String decodeString(ArrayList<StringPart> parts) 
{
  
   for(int i=0,i<part.size()ï¼›i++)
    {
     String tmp="";
     tmp = mastr.substring(master.getStart();master.getStart()+master.getLength());
    }
    return tmp;
    }
     

}
(b) Write the StringCoder method encodeString. A string is encoded by determining the substrings in the master string that can be combined to generate the given string. The encoding starts with a string part that matches the beginning of the word, followed by a string part that matches the beginning of the rest of the word, and so on. The string parts are returned in an array list in the order in which they appear in word.
The helper method findPart must be used to choose matching string parts in the master string. Complete method encodeString below.
/** @param word the string to be encoded
* Precondition: all of the characters in word appear in the master string;
* word.length() > 0
* @return an ArrayList of string parts of the master string that can be combined * to create word
*/
public ArrayList<StringPart> encodeString(String word)
{
  List tmp = new ArrayList<String part>;
 while(word.length() != 0){ 
        part = findPart(word); 
        tmp.add(part); 
        word = word.substring(part.getLength(),master.getLength()); 
 } 
  return tmp; 
 }

}
